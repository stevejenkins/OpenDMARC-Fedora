diff --git a/db/schema.mysql b/db/schema.mysql
index 3f878cb..99152bd 100644
--- a/db/schema.mysql
+++ b/db/schema.mysql
@@ -27,7 +27,7 @@ CREATE TABLE IF NOT EXISTS requests (
         policy TINYINT NOT NULL,
         spolicy TINYINT NOT NULL,
         pct TINYINT NOT NULL,
-        locked TINYINT NOT NULL,
+        locked TINYINT NOT NULL DEFAULT '0',
 	firstseen TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
 	lastsent TIMESTAMP NOT NULL DEFAULT '1970-01-01 00:00:01',
 
@@ -68,7 +68,7 @@ CREATE TABLE IF NOT EXISTS messages (
 	env_domain INT UNSIGNED NOT NULL,
 	from_domain INT UNSIGNED NOT NULL,
 	policy_domain INT UNSIGNED NOT NULL,
-	spf TINYINT UNSIGNED NOT NULL,
+	spf TINYINT NOT NULL,
 	align_dkim TINYINT UNSIGNED NOT NULL,
 	align_spf TINYINT UNSIGNED NOT NULL,
 	sigcount TINYINT UNSIGNED NOT NULL,
diff --git a/reports/Makefile.in b/reports/Makefile.in
index 11c8080..cfb0f36 100644
--- a/reports/Makefile.in
+++ b/reports/Makefile.in
@@ -292,7 +292,7 @@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
 AUTOMAKE_OPTIONS = foreign
-dist_doc_DATA = README mkdb.mysql
+dist_doc_DATA = README
 dist_sbin_SCRIPTS = opendmarc-expire opendmarc-import opendmarc-importstats \
 	opendmarc-params opendmarc-reports
 
diff --git a/reports/README b/reports/README
index 90267fe..0ef7c80 100644
--- a/reports/README
+++ b/reports/README
@@ -4,10 +4,6 @@ OPENDMARC REPORTS
 This directory contains tools necessary to generate DMARC reports at regular
 intervals.  It includes the following:
 
-	mkdb.mysql		sequence of MySQL commands that will create
-				tables needed to provide DMARC reporting
-				service via the scripts below
-
 	opendmarc-expire	perl script to expire old DMARC records from
 				the database; meant to be run from cron
 
@@ -33,13 +29,13 @@ package.  The opendmarc filter populates the tables in that schema as messages
 are received and DMARC policies evaluated.  The scripts in here use the
 accumulated information to generate reports, and age out old data.
 
-To use mkdb.mysql, enter the MySQL command line tool, connect to the database
-in which you want to create the required tables, and type "source mkdb.mysql".
+To use schema.mysql, enter the MySQL command line tool, connect to the database
+in which you want to create the required tables, and type "source schema.mysql".
 
 SETUP
 =====
 
-1) From within the MySQL command line environment, "source mkdb.mysql" to
+1) From within the MySQL command line environment, "source schema.mysql" to
    create the required database and tables.  You may also wish to set up
    users and access grants for users that will access this data.
 
diff --git a/reports/mkdb.mysql b/reports/mkdb.mysql
deleted file mode 100644
index 83f5de5..0000000
--- a/reports/mkdb.mysql
+++ /dev/null
@@ -1,77 +0,0 @@
--- Copyright (c) 2013, The Trusted Domain Project.  All rights reserved.
-
--- MySQL command sequence to create a database to accumulate OpenDMARC
--- report data
-
--- table mapping domain names to id numbers
-CREATE TABLE domains (
-	id INT(11) NOT NULL AUTO_INCREMENT,
-	name VARCHAR(255) NOT NULL,
-	firstseen TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
-	PRIMARY KEY(id),
-	UNIQUE KEY(name)
-) ENGINE=innodb DEFAULT CHARSET=latin1;
-
--- table mapping IP addresses to id numbers
-CREATE TABLE ipaddr (
-	id INT(11) NOT NULL AUTO_INCREMENT,
-	addr VARCHAR(64) DEFAULT NULL,
-	firstseen TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
-	PRIMARY KEY(id),
-	UNIQUE KEY(addr)
-) ENGINE=innodb DEFAULT CHARSET=latin1;
-
--- table tracking message-specific data
-CREATE TABLE messages (
-	id INT(11) NOT NULL AUTO_INCREMENT,
-	date TIMESTAMP NOT NULL default CURRENT_TIMESTAMP,
-	jobid VARCHAR(128) NOT NULL,
-	reporter INT(10) UNSIGNED NOT NULL,
-	ip INT(10) UNSIGNED NOT NULL,
-	policy TINYINT(3) UNSIGNED NOT NULL,
-	disp TINYINT(3) UNSIGNED NOT NULL,
-	from_domain INT(10) UNSIGNED NOT NULL,
-	env_domain INT(10) UNSIGNED NOT NULL,
-	policy_domain INT(10) UNSIGNED NOT NULL,
-	sigcount TINYINT(3) UNSIGNED NOT NULL,
-	spf TINYINT(3) NOT NULL,
-	align_spf TINYINT(3) UNSIGNED NOT NULL,
-	align_dkim TINYINT(3) UNSIGNED NOT NULL,
-	PRIMARY KEY(id),
-	UNIQUE KEY(reporter,date,jobid)
-) ENGINE=innodb DEFAULT CHARSET=latin1;
-
--- table mapping reporters to ids
-CREATE TABLE reporters (
-	id INT(11) NOT NULL AUTO_INCREMENT,
-	name VARCHAR(255) NOT NULL,
-	firstseen TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
-	PRIMARY KEY(id),
-	UNIQUE KEY(name)
-) ENGINE=innodb DEFAULT CHARSET=latin1;
-
--- table tracking report requests
-CREATE TABLE requests (
-	id INT(11) NOT NULL AUTO_INCREMENT,
-	domain INT(11) NOT NULL,
-	repuri VARCHAR(255) NOT NULL,
-	pct TINYINT(4) NOT NULL,
-	policy TINYINT(4) NOT NULL,
-	spolicy TINYINT(4) NOT NULL,
-	aspf TINYINT(4) NOT NULL,
-	adkim TINYINT(4) NOT NULL,
-	locked TINYINT(4) NOT NULL DEFAULT '0',
-	firstseen TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
-	lastsent TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
-	PRIMARY KEY(id)
-) ENGINE=innodb DEFAULT CHARSET=latin1;
-
--- table for tracking DKIM signature evaluation results
-CREATE TABLE signatures (
-	id INT(11) NOT NULL AUTO_INCREMENT,
-	message INT(11) NOT NULL,
-	domain INT(11) NOT NULL,
-	pass TINYINT(4) NOT NULL,
-	error TINYINT(4) NOT NULL,
-	PRIMARY KEY(id)
-) ENGINE=innodb DEFAULT CHARSET=latin1;
